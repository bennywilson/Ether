//==============================================================================
// baseShader.kbShader
//
// 2018 kbEngine 2.0
//==============================================================================

cbuffer matrixBuffer {
	matrix modelMatrix;
	matrix mvpMatrix;
};

//-------------------------------------
struct vertexInput {
	float4 position		: POSITION;
	float2 uv			: TEXCOORD0;
	float4 color		: COLOR;
	float4 normal		: NORMAL;
	float4 tangent		: TANGENT;
};

//-------------------------------------
struct pixelInput {
	float4	position	: SV_POSITION;
	float4	color		: COLOR;
	float2	position2	: TEXCOORD1;
	float3	normal		: TEXCOORD2;
};

//-------------------------------------
struct PS_OUTPUT {
	float4 Color		: SV_TARGET0;
	float4 Normal		: SV_TARGET1;
	float4 Specular		: SV_TARGET2;
	float2 Depth		: SV_TARGET3;
};

/**
 *	vertexShader
 */
pixelInput vertexShader( vertexInput input ) {
	pixelInput output = (pixelInput)0;

	output.position = mul( input.position, mvpMatrix );

	output.color = input.color;
	output.position2 = output.position.zw;

	output.normal.xyz = mul( ( input.normal.xyz * 2.0f ) - 1.0f,(float3x3)modelMatrix ).xyz;

	return output;
}

/**
 *	pixelShader
 */
 PS_OUTPUT pixelShader( pixelInput	input ) {
	PS_OUTPUT output = (PS_OUTPUT) 0;

	output.Color.xyz = input.color.xyz;
	output.Specular = float4( 0.0f, 0.0f, 0.0f, 1.0f );
	output.Depth.r = input.position2.x / input.position2.y;

	output.Normal.xyz = normalize( input.normal );

	return output;
}