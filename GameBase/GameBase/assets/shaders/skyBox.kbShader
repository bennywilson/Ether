//==============================================================================
// skyBox.kbShader
//
// 2017-2018 kbEngine 2.0
//==============================================================================
cbuffer matrixBuffer {
   matrix mvpMatrix;
   float4 cameraPos;
};

//-------------------------------------
struct vertexInput {
   float4 position   : POSITION;
   float2 uv         : TEXCOORD0;
   float4 color      : COLOR;
   float4 normal     : NORMAL;
   float4 tangent    : TANGENT;
};

//-------------------------------------
struct pixelInput {
   float4 position   : SV_POSITION;
   float2 uv         : TEXCOORD0;
   float4 color      : COLOR;
   float4 position2  : TEXCOORD1;
   float3 normal     : TEXCOORD2;
};

//-------------------------------------
struct PS_OUTPUT {
   float4 Color		: SV_TARGET0;
//	float4 Normal		: SV_TARGET1;
};

/**
 *	vertexShader
 */
pixelInput vertexShader( vertexInput input ) {
	pixelInput output = (pixelInput)(0);

	output.position = mul( (input.position + float4(cameraPos.xyz, 0)), mvpMatrix );
	output.position.z = output.position.w - 0.0001f;

	output.uv = input.uv;
	output.color = input.color;
	output.position2 = input.position;
//	output.normal.xyz = mul( ( input.normal.xyz * 2.0f ) - 1.0f, modelMatrix );

	return output;
}


Texture2D shaderTexture;
SamplerState SampleType;

/**
 *	pixelShader
 */
 PS_OUTPUT pixelShader( pixelInput	input ) : SV_TARGET {
 	PS_OUTPUT output = (PS_OUTPUT) 0;

	output.Color.xyz += shaderTexture.Sample( SampleType, input.uv ).xyz;

	return output;
}
