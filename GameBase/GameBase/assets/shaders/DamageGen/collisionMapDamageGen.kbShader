//===================================================================================================
// collisionMapDamageGen.kbShader
//
//
// 2018 kbEngine 2.0
//===================================================================================================
cbuffer matrixBuffer {
   float4 perpendicularDirection;
   float4 time;
};

kbShaderState {
	srcBlendAlpha Blend_One
	dstBlendAlpha Blend_One
	blendOpAlpha BlendOp_Min
	colorwriteenable colorwriteenable_a
}

//-------------------------------------
struct vertexInput {
	float4 position		: POSITION;
	float2 uv			: TEXCOORD0;
	float4 color		: COLOR;
};

//-------------------------------------
struct pixelInput {
	float4 position		: SV_POSITION;
	float2 perpVec		: TEXCOORD0;
	float height		: TEXCOORD3;
	float4 color		: TEXCOORD4;
};

/**
 *	vertexShader
 */
pixelInput vertexShader( vertexInput input ) {
	pixelInput output = (pixelInput)0;
	
	output.height = input.position.z;
	output.position = input.position;
	output.position.z = 0;
	output.color = input.color;

	if ( input.uv.x < 0.5f ) {
		output.perpVec = -perpendicularDirection.xy;
	} else {
		output.perpVec = perpendicularDirection.xy;	
	}

	return output;
}

/**
 *	pixelShader
 */
Texture2D shaderTexture;
SamplerState SampleType;

float4 pixelShader( pixelInput input ) : SV_TARGET {
	return float4( input.perpVec.xy, time.x, input.height );
}