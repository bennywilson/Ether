//==============================================================================
// unwrap.kbShader
//
// 2018 kbEngine 2.0
//==============================================================================
cbuffer matrixBuffer {
	matrix	modelMatrix;
	float4	color;
	float4	hitLocation;
	float4	hitDirection;
};

//-------------------------------------
struct vertexInput {
	float4 position			: POSITION;
	float2 uv				: TEXCOORD0;
};

//-------------------------------------
struct pixelInput {
	float4 position			: SV_POSITION;
	float2 uv				: TEXCOORD0;
	float4 localPos			: TEXCOORD1;
};

/**
 *	vertexShader
 */
pixelInput vertexShader( vertexInput input ) {
	pixelInput output = (pixelInput)(0);

	output.position = float4( ( 2.0f * input.uv ) - 1.0f, 0.0f, 1.0f );
	output.position.y = -output.position.y;
	output.uv = input.uv;
	output.localPos = input.position;
	return output;
}

/**
 *	pixelShader
 */
Texture2D baseTexture			: register(t0);
SamplerState SampleType;

 float4 pixelShader( pixelInput	input ) : SV_TARGET {

	float3 closestPt = ( input.localPos.xyz - hitLocation.xyz ) * hitDirection.xyz + hitLocation.xyz;
	if ( length( closestPt - input.localPos.xyz ) > 4.0f )
		clip(-1);

	return float4(1, 0, 1, 1 );
}
